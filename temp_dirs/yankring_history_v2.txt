        s.erase(s.end());,V
            cout << "check" << endl;,V
            getchar();,V
i+j < s.size(),v
            //cout << "Right" << '\t' << num << ' ' << i << endl;,V
i+j >= s.size(),v
#define RIGHT 0,V
#define LEFT 1,V
    },V
    {,V
    else,V
    if(dir == RIGHT),V
                return q.back().layer;,V
            if(move(LEFT, q.front(), i)),V
    cout << length << endl;,V
            if(dp.at(i).s.size() != length),V
        bool check = true;,V
            return false;,V
            ,V
             if,v
        if(dp.at(i).s.size() != length,V
            cout << "finish check" << endl;,V
            cout << "check = " << check << endl;,V
    cout << "move" << endl;,V
  init();,V
  cout << bfs();,V
  ,V
,V
    #PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1",V
    #PS1="$BCyan\t $BPurple\D{%m/%d} $BYellow\u$BWhite@\h $BGreen[\w] \$(function_svn_string)$Color_Off\r\n> ",V
    #set prompt="[${Green}%n${Blue}@%m ${White}%~ ]${Color_Off} ",V
    #set prompt="${Green}%n${Blue}@%m ${White}%~ ${Green}%%${Color_Off} ",V
    BWhite="\e[1;37m"       # White,V
    BCyan="\e[1;36m"        # Cyan,V
    BPurple="\e[1;35m"      # Purple,V
    BBlue="\e[1;34m"        # Blue,V
    BYellow="\e[1;33m"      # Yellow,V
    BGreen="\e[1;32m"       # Green,V
    BRed="\e[1;31m"         # Red,V
    BBlack="\e[1;30m"       # Black,V
    # Bold,V
    White="\e[0;37m"        # White,V
    Cyan="\e[0;36m"         # Cyan,V
    Purple="\e[0;35m"       # Purple,V
    Blue="\e[0;34m"         # Blue,V
    Yellow="\e[0;33m"       # Yellow,V
    Green="\e[0;32m"        # Green,V
    Red="\e[0;31m"          # Red,V
    Black="\e[0;30m"        # Black,V
    # Regular Colors,V
    Color_Off="\e[0m"       # Text Reset,V
    # Reset,V
    # COLOR,V
    \D{%m/%d},V
r_Off="\e[0m"       # Text Reset,v
end,V
    echo (pwd) "> ",V
                cout << "here" << endl;,V
                    tmp.s.at(i+j) = save.at(j);,V
    cout << "here" << endl;,V
    return q.back().layer;,V
                tmp.s[i] = two[0]; tmp.s[i+1] = two[1];,V
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1",V
	PS1="$BCyan\t $BPurple\D{%m/%d} $BYellow\u$BWhite@\h $BGreen[\w] \$(function_svn_string)$Color_Off\r\n> ",V
# COLOR# ResetColor_Off="\e[0m"       # Text Reset# Regular ColorsBlack="\e[0;30m"        # BlackRed="\e[0;31m"          # RedGreen="\e[0;32m"        # GreenYellow="\e[0;33m"       # YellowBlue="\e[0;34m"         # BluePurple="\e[0;35m"       # PurpleCyan="\e[0;36m"         # CyanWhite="\e[0;37m"        # White# BoldBBlack="\e[1;30m"       # BlackBRed="\e[1;31m"         # RedBGreen="\e[1;32m"       # GreenBYellow="\e[1;33m"      # YellowBBlue="\e[1;34m"        # BlueBPurple="\e[1;35m"      # PurpleBCyan="\e[1;36m"        # CyanBWhite="\e[1;37m"       # White,V
    two.push_back(s[num]); two.push_back(s[num+1]);,V
    getchar();,V
        cout << s.at(i);,V
    for(int i = 0; i < s.size(); ++i),V
    cout << "bfs" << endl;,V
/*,V
  cout << dp.front().layer << endl;,V
      cout << q.front().s[i];,V
  for(int i = 0; i < 2*n; ++i),V
  cout << finish(tmp) << endl;,V
  cout << endl;,V
      cout << tmp.at(i);,V
  },V
      tmp.push_back('o');,V
      tmp.push_back('x');,V
    if(i & 1),V
  {,V
  vector<char> tmp;,V
  //cout << bfs();,V
    getchar();    vector<char> two, s;,V
*/,V
},V
  return true;,V
    return false;,V
  default:,V
    break;,V
      else return false;,V
      if(s[i] == 'x' && s[i+1] == 'o');,V
    for(int i = 0; i < 2*n; i+=2),V
  case 'x':,V
      if(s[i] ==  'o' && s[i+1] == 'x');,V
    cout << s[i] << s[i+1] << endl;,V
  case 'o':,V
  switch (s[0]) {,V
{,V
